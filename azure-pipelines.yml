trigger:
  branches:
    include:
      - refs/heads/*
      - refs/tags/*
pr:
  branches:
    include:
    - master
    
variables:
- group: sonarqube
- group: sign
- group: ossrh

jobs:
- job: Build
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:
  - task: Gradle@2
    displayName: Compile
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'jar'
      options: '--info --stacktrace'
  - task: Gradle@2
    displayName: Run tests
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      tasks: 'build'
      options: '--info --stacktrace'
  - task: Gradle@2
    displayName: Assess code quality
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      tasks: 'sonarqube'
      options: '-Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bakdata --info --stacktrace'
    env:
      SONAR_TOKEN: $(sonar_token)
  - task: DownloadSecureFile@1
    inputs:
      secureFile: secring.gpg
  - task: Gradle@2
    displayName: Check if everything builds (incl. javadoc) for snapshot/release and signing works
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      tasks: 'sign'
      options: '--info --stacktrace'
    env:
      SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg 
      SIGNING_PASSWORD: $(signing.password)
      SIGNING_KEY_ID: $(signing.keyId)

- job: UploadSnapshot
  pool:
    vmImage: 'Ubuntu-16.04'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['release.version'], ''), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: secring.gpg
  - task: Gradle@2
    displayName: Upload snapshot
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'publishToNexus -x test'
      options: '--info --stacktrace'
    env:
      SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg 
      SIGNING_PASSWORD: $(signing.password)
      SIGNING_KEY_ID: $(signing.keyId)
      OSSRH_USERNAME: $(ossrh.username)
      OSSRH_PASSWORD: $(ossrh.password)
      CI: true

- job: UploadRelease
  pool:
    vmImage: 'Ubuntu-16.04'
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  steps:
  - task: DownloadSecureFile@1
    inputs:
      secureFile: secring.gpg
  - task: Gradle@2
    displayName: Upload tagged release
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'publishToNexus closeAndReleaseRepository -x test'
      options: '--info --stacktrace'
    env:
      SIGNING_SECRET_KEY_RING_FILE: $(Agent.TempDirectory)/secring.gpg 
      SIGNING_PASSWORD: $(signing.password)
      SIGNING_KEY_ID: $(signing.keyId)
      OSSRH_USERNAME: $(ossrh.username)
      OSSRH_PASSWORD: $(ossrh.password)
      CI: true
  - task: Gradle@2
    displayName: Create release changelog
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'generateChangelog'
      options: '-Pchangelog.releaseVersion=$(Build.SourceVersion) -Pchangelog.sinceTag=$(Build.SourceVersion) --stacktrace --info'
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'bot'
      repositoryName: '$(Build.Repository.Name)'
      releaseNotesFile: 'CHANGELOG.md'
      title: 'Release $(Build.SourceVersion)'
      assets: '**/build/libs/*.jar'
      addChangeLog: false

- job: TagVersionForNewRelease
  pool:
    vmImage: 'Ubuntu-16.04'
  dependsOn: Build
  # when manually run with overridden release.version
  condition: and(succeeded(), ne(variables['release.version'], ''), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
  - checkout: self
    persistCredentials: true
  # Resolve bugfix|minor|major|<version> to actual version
  - bash: |
      version=$(grep "version=" gradle.properties | cut -d'=' -f2)
      if [[ "$(release.version)" == "bugfix" ]]; then
          version=${version%-*}
      elif [[ "$(release.version)" == "minor" ]]; then
          version=${version%%.*}.$((`echo ${version} | cut -d'.' -f 2`+1)).0
      elif [[ "$(release.version)" == "major" ]]; then
          version=$((${version%%.*}+1)).0.0
      elif [[ "$(release.version)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          version=$(release.version)
      else
          echo "Got unsupported version $(release.version), use bugfix|minor|major|<version>" >&2
          exit 1
      fi
      echo "##vso[task.setvariable variable=version]${version}"
  - task: Gradle@2
    displayName: Generate changelog for $(version)
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'generateChangelog'
      options: '-Pchangelog.releaseVersion=$(version) --stacktrace --info'
  - script: |
      # set bot as author
      git config user.email "31185348+bakdata-bot@users.noreply.github.com"
      git config user.name "bakdata-bot"
      # check if we are really on HEAD of master
      git fetch 
      if [[ `git rev-list HEAD...origin/master --count` > 0 ]]; then exit 1; fi
      git checkout master
      # add commit and push to master
      git add CHANGELOG.md
      git commit -m "Changelog for version $(version)"
      git push
  # Sets the release version; creates tag; and sets new SNAPSHOT version (total: 2 commits + 1 tag)
  # Tag triggers actual deployment
  - task: Gradle@2
    displayName: Release new version
    inputs: 
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      tasks: 'release'
      options: '-Prelease.useAutomaticVersion=true -Prelease.releaseVersion=$(version) --stacktrace --info'
    env:
      CI: true